name: Manual Windows Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version like 1.0.1
        required: true

jobs:
  windows-release:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Package app (electron-packager)
        run: npx -y electron-packager@17.1.2 . Krigzis --platform=win32 --arch=x64 --out=release --overwrite --icon=assets/icon.ico --asar --app-version ${{ inputs.version }}
      - name: Rename to win-unpacked
        shell: pwsh
        run: |
          if (Test-Path 'release\win-unpacked') { Remove-Item -Recurse -Force 'release\win-unpacked' }
          $src = Get-ChildItem -Directory release | Where-Object { $_.Name -like 'Krigzis-win32-*' } | Select-Object -First 1
          Move-Item $src.FullName 'release\win-unpacked'
      - name: Create ZIP from win-unpacked
        shell: pwsh
        run: |
          $zip = "release/Krigzis-${{ inputs.version }}-win-unpacked.zip"
          if (Test-Path $zip) { Remove-Item -Force $zip }
          Compress-Archive -Path 'release/win-unpacked/*' -DestinationPath $zip -Force
      - name: Build NSIS installer
        run: makensis /DAPP_VERSION=${{ inputs.version }} /DICON_PATH=assets\icon.ico scripts/windows-installer.nsi
      - name: Publish assets to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.version }}
          name: v${{ inputs.version }}
          draft: false
          prerelease: false
          files: |
            release/Krigzis-${{ inputs.version }}-win-unpacked.zip
            release/Krigzis-Setup-${{ inputs.version }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
